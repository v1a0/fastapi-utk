[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
dynamic = ["version"]
name = "fastapi-utk"
description = "FastAPI Ultimate Toolkit"
readme = "README.md"
authors = [
    { name = "v1a0", email = "contact@v1a0.dev" }
]
requires-python = ">=3.12"
dependencies = [
    "fastapi>=0.115.12",
    "pydantic>=2.11.5",
]
classifiers = [
    "Programming Language :: Python :: 3.13",
    "Framework :: FastAPI",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Operating System :: OS Independent"
]

[project.urls]
homepage = "https://github.com/v1a0/fastapi-utk"
example = "https://github.com/v1a0/fastapi-utk/tree/main/example"

[dependency-groups]
dev = [
    "mypy>=1.15.0",
    "pre-commit>=4.2.0",
    "ruff>=0.11.11",
    "twine>=6.1.0",
]

[tool.setuptools.dynamic]
version = { attr = "fastapi_utk.__version__" }

[tool.setuptools.packages.find]
where = ["."]
exclude = ["example*", "docs*"]

[tool.mypy]
python_version = "3.13"
strict = true
plugins = ["pydantic.mypy"]

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[tool.ruff]
line-length = 120
target-version = "py313"


[tool.ruff.lint]
preview = true
select = [# see https://docs.astral.sh/ruff/rules
    "E", # pycodestyle errors
    "W", # pycodestyle warnings
    "F", # pyflakes
    "I", # isort
    "N", # PEP8 naming convetions
    "B", # flake8-bugbear
    "S", # flake8-bandit
    "A", # flake8-builtins
    "COM", # flake8-commas
    "C4", # flake8-comprehensions
    "ANN", #  flake8-annotations
    "FA", # flake8-future-annotations
    "ASYNC", #  flake8-async
    "G", # flake8-logging-format
    "PIE", # flake8-pie
    "T20", # flake8-print
    "Q", # flake8-quotes
    "RSE", # flake8-raise
    "TD", # flake8-todos
]
ignore = [
    "C901", # too complex
    "W191", # indentation contains tabs
    "A005", # stdlib-module-shadowing
    "TD002", # Missing author in TD
    "TD003", # Missing issue link
    "G004", # Logging statement uses f-string
    "COM812" # ???
]
fixable = [
    "I", # isort
    "COM", # trailing comma
    "W291", # trailing-whitespace
    "W292", #  No newline at end of file
    "W293", # blank-line-with-whitespace
    "F401", # auto-removal of unused imports
]
unfixable = []


[tool.pytest.ini_options]
asyncio_mode = "auto"
